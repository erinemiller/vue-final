{"version":3,"sources":["SearchGifComponent.js"],"names":["SearchGifComponent","Vue","component","data","searchText","gifData","watch","console","log","gifSearch","methods","axios","get","then","response","catch","error","warn","submitGiphy","giphyURL","$emit","props","template"],"mappings":";;AAAA,IAAIA,qBAAqBC,IAAIC,SAAJ,CAAc,WAAd,EAA2B;AAChDC,UAAM,gBAAY;AACd,eAAO;AACHC,wBAAY,EADT;AAEHC,qBAAS;AAFN,SAAP;AAIH,KAN+C;;AAQhDC,WAAO;AACHF,oBAAY,sBAAU;AAClBG,oBAAQC,GAAR,CAAY,6CAAZ,EAA2D,KAAKJ,UAAhE;AACA,iBAAKK,SAAL,CAAe,KAAKL,UAApB;AACH;AAJE,KARyC;;AAehDM,aAAS;AACLD,mBAAW,mBAASL,UAAT,EAAoB;AAAA;;AAC3BO,kBACKC,GADL,CACS,0HADT,EAEKC,IAFL,CAEU,UAACC,QAAD,EAAc;AAChBP,wBAAQC,GAAR,CAAYM,QAAZ;AACA,sBAAKT,OAAL,GAAeS,SAASX,IAAT,CAAcA,IAA7B;AACH,aALL,EAMKY,KANL,CAMW,UAACC,KAAD,EAAW;AACdT,wBAAQU,IAAR,CAAaD,KAAb;AACH,aARL;AASD,SAXE;AAYHE,qBAAa,qBAASC,QAAT,EAAmB;AACvCZ,oBAAQC,GAAR,CAAY,aAAZ;AACS,iBAAKY,KAAL,CAAW,gBAAX,EAA6BD,QAA7B;AAED;AAhBE,KAfuC;;AAoChDE,WAAO,CAAC,UAAD,EAAa,QAAb,CApCyC;AAqChDC;AAuBF;;AA5DkD,CAA3B,CAAzB","file":"SearchGifComponent.js","sourcesContent":["let SearchGifComponent = Vue.component('searchgif', {\n    data: function () {\n        return {\n            searchText: '',\n            gifData: null       \n        }\n    },\n    \n    watch: {\n        searchText: function(){\n            console.log(\"user entered a search term for giphy search\", this.searchText);\n            this.gifSearch(this.searchText)\n        }\n    },\n     \n    methods: {\n        gifSearch: function(searchText){\n            axios\n                .get('https://api.giphy.com/v1/gifs/search?api_key=B4PzECN4osdlqLZSB7c8yvPFuYYVqzrM&q=mario&limit=25&offset=0&rating=G&lang=en')\n                .then((response) => {\n                    console.log(response);\n                    this.gifData = response.data.data;                   \n                })\n                .catch((error) => {\n                    console.warn(error);\n                });\n          },\n          submitGiphy: function(giphyURL) {\n\t\t\tconsole.log('submitGiphy');\n            this.$emit('submittedgiphy', giphyURL);\n        \n          }\n    },\n\n\n\n    props: [\"username\", \"status\"],     \n    template:\n        `\n            <div>\n                <router-link tag=\"button\" to=\"/\"><a> &gt; BACK </a></router-link>\n\n                <div class=\"blink-me\"><p>Hi, {{ username }} </p></div>\n\n                <p>Choose a Giphy to match this subject: {{ status.question }} </p>\n\n                <label><input v-model=\"searchText\" placeholder=\"search gifs\"></label>\n                \n                <ul class=\"giphys\">\n                    <li v-for=\"giphy in gifData\">\n                         <img @click=\"gifSearch(giphy.images.original.url)\"  v-bind:src=\"giphy.images.original.url\">\n                    </li>\n                </ul>\n\n                <div class =\"btn-container\"><router-link tag=\"button\" to=\"/votegif\"><a>SUBMIT</a></router-link>\n                  \n                </div> </p>\n                \n            </div>\n        `\n  //has to be wrapped in single element, even if its just a div\n  \n})\n\n"]}