{"version":3,"sources":["SearchGifComponent.js"],"names":["SearchGifComponent","Vue","component","data","searchText","gifData","giphyURL","clickGif","watch","console","log","gifSearch","methods","giphys","axios","get","then","response","catch","error","warn","selectGif","$emit","document","querySelectorAll","forEach","activeGiphy","classList","remove","event","target","add","submitGif","$router","push","props","template"],"mappings":";;AAAA,IAAIA,qBAAqBC,IAAIC,SAAJ,CAAc,WAAd,EAA2B;AAChDC,UAAM,gBAAY;AACd,eAAO;AACHC,wBAAY,EADT;AAEHC,qBAAS,IAFN;AAGHC,sBAAU,EAHP;AAIHC,sBAAU;AAJP,SAAP;AAMH,KAR+C;;AAUhDC,WAAO;AACHJ,oBAAY,sBAAU;AAClBK,oBAAQC,GAAR,CAAY,6CAAZ,EAA2D,KAAKN,UAAhE;AACA,iBAAKO,SAAL,CAAe,KAAKP,UAApB;AACH;AAJE,KAVyC;;AAiBhDQ,aAAS;AACLD,mBAAW,mBAASP,UAAT,EAAoB;AAAA;;AAC3B,iBAAKS,MAAL,GAAc,EAAd;AACAC,kBACKC,GADL,CACS,4CAA4C,KAAKX,UAAjD,GAA8D,qCAA9D,GAAsG,2CAD/G,EAEKY,IAFL,CAEU,UAACC,QAAD,EAAc;AAChBR,wBAAQC,GAAR,CAAYO,QAAZ;AACA,sBAAKZ,OAAL,GAAeY,SAASd,IAAT,CAAcA,IAA7B;AACH,aALL,EAMKe,KANL,CAMW,UAACC,KAAD,EAAW;AACdV,wBAAQW,IAAR,CAAaD,KAAb;AACH,aARL;AASD,SAZE;AAaLE,mBAAW,SAASA,SAAT,CAAmBf,QAAnB,EAA6B;AAC7C;;AAEA,iBAAKe,SAAL,GAAiB,IAAjB;AACA,iBAAKC,KAAL,CAAW,gBAAX,EAA6BhB,QAA7B;;AAEAiB,qBAASC,gBAAT,CAA0B,eAA1B,EAA2CC,OAA3C,CAAmD,UAAUC,WAAV,EAAuB;AACzEA,4BAAYC,SAAZ,CAAsBC,MAAtB,CAA6B,eAA7B;AACA,aAFD;;AAIAC,kBAAMC,MAAN,CAAaH,SAAb,CAAuBI,GAAvB,CAA2B,cAA3B;AACM,SAxBI;AAyBLC,mBAAW,mBAAS1B,QAAT,EAAmB;AACnCG,oBAAQC,GAAR,CAAY,YAAZ;AACS,iBAAKY,KAAL,CAAW,WAAX,EAAwBhB,QAAxB;AACA,iBAAK2B,OAAL,CAAaC,IAAb,CAAkB,UAAlB;AACH;;AA7BI,KAjBuC;;AAsDhDC,WAAO,CAAC,UAAD,EAAa,QAAb,CAtDyC;AAuDhDC;AAyBF;AACA;AAjFkD,CAA3B,CAAzB","file":"SearchGifComponent.js","sourcesContent":["let SearchGifComponent = Vue.component('searchgif', {\n    data: function () {\n        return {\n            searchText: '',\n            gifData: null,\n            giphyURL: '',      \n            clickGif: false\n        }\n    },\n    \n    watch: {\n        searchText: function(){\n            console.log(\"user entered a search term for giphy search\", this.searchText);\n            this.gifSearch(this.searchText)\n        }\n    },\n     \n    methods: {\n        gifSearch: function(searchText){\n            this.giphys = [];\n            axios\n                .get(\"https://api.giphy.com/v1/gifs/search?q=\" + this.searchText + \"&limit=25&offset=0&rating=G&lang=en\" + \"&api_key=B4PzECN4osdlqLZSB7c8yvPFuYYVqzrM\")\n                .then((response) => {\n                    console.log(response);\n                    this.gifData = response.data.data;                   \n                })\n                .catch((error) => {\n                    console.warn(error);\n                });\n          },\n        selectGif: function selectGif(giphyURL) {\n\t\t\t// console.log('clicked', giphyLink);\n\n\t\t\tthis.selectGif = true;\n\t\t\tthis.$emit(\"pick-the-giphy\", giphyURL);\n\n\t\t\tdocument.querySelectorAll(\".active-giphy\").forEach(function (activeGiphy) {\n\t\t\t\tactiveGiphy.classList.remove(\".active-giphy\");\n\t\t\t});\n\n\t\t\tevent.target.classList.add(\"active-giphy\");\n        },\n        submitGif: function(giphyURL) {\n\t\t\tconsole.log('submit gif');\n            this.$emit('submitgif', giphyURL);\n            this.$router.push(\"/votegif\");\n        }\n        \n        \n          \n    }, \n\n\n\n    props: [\"username\", \"status\"],     \n    template:\n        `\n            <div>\n                <router-link tag=\"button\" to=\"/\"><a> BACK </a></router-link>\n\n                <div class=\"blink-me\"><p>Hi, {{ username }} </p></div>\n\n                <p>Choose a Giphy to match this subject: {{ status.question }} </p>\n\n                <label><input v-model=\"searchText\" placeholder=\"search gifs\"></label>\n                \n               <div> <ul class=\"giphys\">\n                    <li v-for=\"giphy in gifData\">\n                    <router-link to=\"/votegif\">\n                         <img @click=\"gifSearch(giphy.images.original.url)\" alt=\"\" v-bind:src=\"giphy.images.original.url\" link-to=\"/votegif\">\n                    </router-link>\n                    </li>\n                </ul>\n                <button @click=\"selectGif\" :disabled=\"!searchText || !submitGif\" to=\"/votegif\">Submit</button>\n               \n                  \n                </div> \n                \n            </div>\n        `\n  //has to be wrapped in single element, even if its just a div\n  // <div class =\"btn-container\"><router-link tag=\"button\" to=\"/votegif\"><a>SUBMIT</a></router-link>\n})\n\n"]}